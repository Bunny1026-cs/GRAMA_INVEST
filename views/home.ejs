<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GRAMA INVEST</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            background-color: #121316;
            color: white;
            font-family: 'Arial', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            min-height: 100vh;
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        header {
            width: 100%;
            padding: 20px;
            background: linear-gradient(90deg, #1f1c2c, #928dab);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            animation: slideDown 1s ease-in-out;
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
            }

            to {
                transform: translateY(0);
            }
        }

        nav {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        nav button {
            margin: 0 5px;
            padding: 10px;
            background: #444;
            border: none;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s, transform 0.3s;
        }

        nav button:hover {
            background: #9fbbc1;
            transform: scale(1.1);
        }

        .search-bar {
            padding: 10px;
            border: 1px solid #444;
            border-radius: 5px;
            background: #222426;
            color: white;
            width: 200px;
            margin-left: 20px;
            transition: width 0.3s;
            box-shadow: 0 0 10px rgba(135, 176, 233, 0.911);
        }

        .search1-bar {

            box-shadow: 0 0 10px rgba(255, 255, 255, 0.911);
        }

        .search-bar:focus {
            width: 250px;
        }

        .container {
            text-align: center;
            animation: fadeIn 2s ease-in-out;
        }

        .button-container {
            margin-top: 20px;
        }

        .glow-on-hover {
            background-color: transparent;
            border: 2px solid rgb(206, 168, 168);
            color: white;
            padding: 15px 30px;
            font-size: 20px;
            margin: 10px;
            cursor: pointer;
            border-radius: 5px;
            outline: none;
            position: relative;
            overflow: hidden;
            transition: color 0.4s, transform 0.3s;
            box-shadow: 0 0 10px rgba(234, 44, 164, 0.911);
        }

        .glow-on-hover::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            width: 300%;
            height: 300%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.0));
            transform: translate(-50%, -50%) scale(0);
            border-radius: 50%;
            transition: transform 0.4s;
        }

        .glow-on-hover:hover {
            color: #00ff00;
            transform: scale(1.1);
        }

        .glow-on-hover:hover::before {
            transform: translate(-50%, -50%) scale(1);
        }

        .content-area {
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #444;
            border-radius: 8px;
            background-color: rgba(255, 255, 255, 0.1);
            animation: fadeIn 1s ease-in-out;
        }

        footer {
            margin-top: 20px;
            padding: 10px;
            background: #1f1c2c;
            width: 100%;
            text-align: center;
            box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.2);
            animation: slideUp 1s ease-in-out;
        }

        @keyframes slideUp {
            from {
                transform: translateY(100%);
            }

            to {
                transform: translateY(0);
            }
        }

        .cta-button {
            margin-top: 10px;
            padding: 10px 20px;
            background: #444;
            border: none;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s, transform 0.3s;
        }

        .cta-button:hover {
            background: #00ff00;
            transform: scale(1.1);
        }

        .auth-buttons {
            position: absolute;
            top: 20px;
            right: 20px;
        }

        .auth-buttons button {
            margin: 0 5px;
            padding: 10px 20px;
            background: #444;
            border: none;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            transition: background 0.3s, transform 0.3s;
        }

        .auth-buttons button:hover {
            background: #00ff00;
            transform: scale(1.1);
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            color: black;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .profile-section {
            position: fixed;
            top: 0;
            right: -300px;
            width: 300px;
            height: 100%;
            background: #444;
            padding: 20px;
            box-shadow: -2px 0 5px rgba(0, 0, 0, 0.5);
            color: white;
            transition: right 0.3s ease;
            overflow-y: auto;
        }

        .profile-section.open {
            right: 0;
        }

        .profile-section img {
            border-radius: 50%;
            width: 50px;
            height: 50px;
        }

        .profile-section p {
            margin: 5px 0;
        }

        .profile-section form {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .profile-section input[type="file"] {
            margin: 10px 0;
        }

        .profile-section button {
            background: #00ff00;
            border: none;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            padding: 5px 10px;
            transition: background 0.3s, transform 0.3s;
        }

        .profile-section button:hover {
            background: #9fbbc1;
            transform: scale(1.1);
        }
    </style>

    <script src="https://widget.cxgenie.ai/widget.js" data-aid="bc88ed95-d796-4b33-9650-4dac3481462b"
        data-lang="en"></script>
</head>

<body>
    <header>
        <div class="auth-buttons">
            <button onclick="showModal('signupModal')">Sign Up</button>
            <button onclick="showModal('loginModal')">Login</button>
            <button onclick="toggleProfileSection()">Profile</button>
        </div>
        <nav>
            <input type="text" class="search-bar" placeholder="Search...">
            <button class="search1-bar" onclick="showContent('about')">About Us</button>
            <button class="search1-bar" onclick="showContent('contact')">Contact</button>
            <button class="search1-bar" onclick="showContent('faq')">FAQ</button>
        </nav>
    </header>
    <br><br>
    <div class="container">
        <h1>GRAMA INVEST </h1>

        <div class="button-container">
            <button class="glow-on-hover" onclick="showContent('stockMarket')">Stock Market</button>
            <button class="glow-on-hover" onclick="showContent('mutualFunds')">Mutual Funds</button>
            <button class="glow-on-hover" onclick="showContent('cryptocurrency')">Cryptocurrency & Bitcoin</button>
            <button class="glow-on-hover" onclick="showContent('governmentSchemes')">Government Schemes</button>
            <button class="glow-on-hover" onclick="showContent('fixedRecurring')">Fixed Deposit & Recurring
                Deposit</button>
        </div>
        <br><br>
        <img src="Grama.jpg" alt="gramainvest" height="200px">
        <br><br>

        <div id="content" class="content-area">
            <p>Select a topic to see the details here.</p>
        </div>
        <button onclick="startVoiceBot()">Start Voice Bot</button>
        <div id="voice-bot-output"></div>
    </div>

    <!-- Profile Section -->
    <div id="profile-section" class="profile-section">
        <h2>User Profile</h2>
        <div id="profile-container">
            <!-- Profile details will be loaded here -->
        </div>
        <form id="profilePhotoForm">
            <input type="file" id="profilePhoto" name="profilePhoto" accept="image/*" required>
            <button type="submit">Upload Photo</button>
        </form>
    </div>

    <!-- Sign Up Modal -->
    <div id="signupModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('signupModal')">&times;</span>
            <h2>Sign Up</h2>
            <form id="signupForm" method="POST" action="/signup">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required><br><br>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required><br><br>
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required><br><br>
                <button type="submit">Sign Up</button>
            </form>
        </div>
    </div>

    <!-- Login Modal -->
    <div id="loginModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('loginModal')">&times;</span>
            <h2>Login</h2>
            <form id="loginForm" method="POST" action="/login">
                <label for="email">Email:</label>
                <input type="email" id="loginEmail" name="email" required><br><br>
                <label for="password">Password:</label>
                <input type="password" id="loginPassword" name="password" required><br><br>
                <button type="submit">Login</button>
            </form>
        </div>
    </div>

    <script>
        function showContent(topic) {
            const contentArea = document.getElementById('content');
            let content;

            switch (topic) {
                case 'stockMarket':
                    content = `  
                        <h2>Stock Market</h2>  `
                    break;
                case 'mutualFunds':
                    content = `  
                        <h2>Mutual Funds</h2>  `
                    break;
                case 'cryptocurrency':
                    content = `  
                        <h2>Cryptocurrency & Bitcoin</h2>  `
                    break;
                case 'governmentSchemes':
                    content = `  
                        <h2>Government Schemes</h2>  `
                    break;
                case 'fixedRecurring':
                    content = `  
                        <h2>Fixed Deposit & Recurring Deposit</h2>  `
                    break;
                default:
                    content = <p>Select a topic to see the details here.</p>;
            }

            contentArea.innerHTML = content;
        }  
    </script>

    <script>
        function showModal(modalId) {
            document.getElementById(modalId).style.display = "block";
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = "none";
            }
        }

        document.getElementById('signupForm').onsubmit = function (event) {
            event.preventDefault();
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            fetch('/signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name, email, password })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message);
                    } else {
                        alert('Sign up successful!');
                        closeModal('signupModal');
                    }
                })
                .catch(error => {
                    console.error('Error during sign up:', error);
                });
        }

        document.getElementById('loginForm').onsubmit = function (event) {
            event.preventDefault();
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;

            fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message);
                    } else {
                        alert('Login successful!');
                        closeModal('loginModal');
                    }
                })
                .catch(error => {
                    console.error('Error during login:', error);
                });
        }

        function showContent(topic) {
            const content = document.getElementById('content');
            switch (topic) {
                case 'stockMarket':
                    window.location.href = '/stockMarket';
                    break;
                case 'mutualFunds':
                    window.location.href = '/MutualFunds';
                    break;
                case 'cryptocurrency':
                    window.location.href = '/Cryptocurrency';
                    break;
                case 'governmentSchemes':
                    window.location.href = '/GovernmentSchemes';
                    break;
                case 'fixedRecurring':
                    window.location.href = '/FixedDeposit';
                    break;
                case 'profile':
                    window.location.href = '/profile';
                    break;
                default:
                    window.location.href = '/';
            }
        }

        function startVoiceBot() {
            fetch('/start-voice-bot', {
                method: 'POST'
            })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('voice-bot-output').innerText = data.output;
                })
                .catch(error => {
                    console.error('Error starting voice bot:', error);
                });
        }

        async function fetchProfile() {
            const response = await fetch('/profile', {
                headers: {
                    'Authorization': localStorage.getItem('token')
                }
            });
            const data = await response.json();
            if (response.ok) {
                document.getElementById('profile-container').innerHTML = `
                    <p>Welcome, ${data.result.name}!</p>
                    <p>Email: ${data.result.email}</p>
                    <img src="${data.result.profilePhoto}" alt="Profile Photo" width="50" height="50">
                `;
                document.getElementById('profile-section').classList.add('open');
            } else {
                document.getElementById('profile-container').innerHTML = `<p>${data.message}</p>`;
            }
        }

        document.getElementById('profilePhotoForm').onsubmit = function(event) {
            event.preventDefault();
            const formData = new FormData();
            formData.append('profilePhoto', document.getElementById('profilePhoto').files[0]);

            fetch('/upload-profile-photo', {
                method: 'POST',
                headers: {
                    'Authorization': localStorage.getItem('token')
                },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    alert(data.message);
                } else {
                    alert('Profile photo uploaded successfully!');
                    fetchProfile();
                }
            })
            .catch(error => {
                console.error('Error uploading profile photo:', error);
            });
        }

        function toggleProfileSection() {
            const profileSection = document.getElementById('profile-section');
            profileSection.classList.toggle('open');
        }

        document.addEventListener('click', function(event) {
            const profileSection = document.getElementById('profile-section');
            const profileButton = document.querySelector('.auth-buttons button:nth-child(3)');
            if (!profileSection.contains(event.target) && !profileButton.contains(event.target)) {
                profileSection.classList.remove('open');
            }
        });
    </script>
</body>

</html>

